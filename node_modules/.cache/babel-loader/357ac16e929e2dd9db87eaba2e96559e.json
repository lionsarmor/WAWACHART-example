{"remainingRequest":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/thread-loader/dist/cjs.js!/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/babel-loader/lib/index.js!/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/eslint-loader/index.js??ref--13-0!/home/roddy/Desktop/WEB-APPS/realtimecharts-client/src/api/LiquidationService.js","dependencies":[{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/src/api/LiquidationService.js","mtime":1602350289715},{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'axios';\nimport { VUEX_LEVERAGES_LONG, VUEX_LEVERAGES_SHORT } from \"../store/constants/bitmex\";\nvar url = 'api/liquidations/liquidations';\nvar baseUrl = 'api/liquidations';\n\nvar LiquidationService =\n/*#__PURE__*/\nfunction () {\n  function LiquidationService() {\n    _classCallCheck(this, LiquidationService);\n  }\n\n  _createClass(LiquidationService, null, [{\n    key: \"Liquidations\",\n    // Register\n    value: function Liquidations(timeInterval, targetVolume, exchange, symbol, longleverages, shortleverages, update) {\n      return new Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee(resolve, reject) {\n          var res, data;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return axios.post(url, {\n                    \"timeInterval\": timeInterval,\n                    \"targetVolume\": targetVolume,\n                    \"exchange\": exchange,\n                    \"symbol\": symbol,\n                    VUEX_LEVERAGES_LONG: longleverages,\n                    VUEX_LEVERAGES_SHORT: shortleverages,\n                    \"update\": update\n                  });\n\n                case 3:\n                  res = _context.sent;\n                  data = res.data;\n\n                  if (data.error) {\n                    reject(data.error);\n                  }\n\n                  resolve(data);\n                  _context.next = 12;\n                  break;\n\n                case 9:\n                  _context.prev = 9;\n                  _context.t0 = _context[\"catch\"](0);\n                  reject(_context.t0);\n\n                case 12:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 9]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"LiquidationBubbles\",\n    value: function LiquidationBubbles() {\n      return new Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee2(resolve, reject) {\n          var res, data;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return axios.get(\"\".concat(baseUrl, \"/bubbles\"));\n\n                case 3:\n                  res = _context2.sent;\n                  data = res.data;\n\n                  if (data.error) {\n                    reject(data.error);\n                  }\n\n                  resolve(data);\n                  _context2.next = 12;\n                  break;\n\n                case 9:\n                  _context2.prev = 9;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  reject(_context2.t0);\n\n                case 12:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 9]]);\n        }));\n\n        return function (_x3, _x4) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    } // Save options in user settings\n\n  }, {\n    key: \"SaveOpts\",\n    value: function SaveOpts(volume, timeInterval) {\n      return new Promise(\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee3(resolve, reject) {\n          var res, data;\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.prev = 0;\n                  _context3.next = 3;\n                  return axios.post(\"\".concat(url, \"/save\"), {\n                    volume: volume,\n                    timeInterval: timeInterval\n                  }, {\n                    headers: {\n                      Authorization: localStorage.getItem('token')\n                    }\n                  });\n\n                case 3:\n                  res = _context3.sent;\n                  data = res.data;\n\n                  if (data.error) {\n                    reject(error);\n                  }\n\n                  resolve(data);\n                  _context3.next = 12;\n                  break;\n\n                case 9:\n                  _context3.prev = 9;\n                  _context3.t0 = _context3[\"catch\"](0);\n                  reject(_context3.t0);\n\n                case 12:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, null, [[0, 9]]);\n        }));\n\n        return function (_x5, _x6) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    }\n  }]);\n\n  return LiquidationService;\n}();\n\nexport default LiquidationService;",{"version":3,"sources":["/home/roddy/Desktop/WEB-APPS/realtimecharts-client/src/api/LiquidationService.js"],"names":["axios","VUEX_LEVERAGES_LONG","VUEX_LEVERAGES_SHORT","url","baseUrl","LiquidationService","timeInterval","targetVolume","exchange","symbol","longleverages","shortleverages","update","Promise","resolve","reject","post","res","data","error","get","volume","headers","Authorization","localStorage","getItem"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,mBAAR,EAA6BC,oBAA7B;AACA,IAAMC,GAAG,GAAG,+BAAZ;AACA,IAAMC,OAAO,GAAG,kBAAhB;;IACMC,kB;;;;;;;;;AAEF;iCACoBC,Y,EAAaC,Y,EAAcC,Q,EAAUC,M,EAAOC,a,EAAeC,c,EAAgBC,M,EAAQ;AACnG,aAAO,IAAIC,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAY,iBAAMC,OAAN,EAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEOf,KAAK,CAACgB,IAAN,CAAWb,GAAX,EAAgB;AAC9B,oCAAgBG,YADc;AAE9B,oCAAeC,YAFe;AAG9B,gCAAWC,QAHmB;AAI9B,8BAASC,MAJqB;AAK9BR,oBAAAA,mBAAmB,EAAES,aALS;AAM9BR,oBAAAA,oBAAoB,EAAES,cANQ;AAO9B,8BAAUC;AAPoB,mBAAhB,CAFP;;AAAA;AAELK,kBAAAA,GAFK;AAWLC,kBAAAA,IAXK,GAWED,GAAG,CAACC,IAXN;;AAYX,sBAAIA,IAAI,CAACC,KAAT,EAAgB;AACZJ,oBAAAA,MAAM,CAACG,IAAI,CAACC,KAAN,CAAN;AACH;;AACDL,kBAAAA,OAAO,CAACI,IAAD,CAAP;AAfW;AAAA;;AAAA;AAAA;AAAA;AAiBXH,kBAAAA,MAAM,aAAN;;AAjBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AAoBH;;;yCAE2B;AACxB,aAAO,IAAIF,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAY,kBAAMC,OAAN,EAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEOf,KAAK,CAACoB,GAAN,WAAahB,OAAb,cAFP;;AAAA;AAELa,kBAAAA,GAFK;AAGLC,kBAAAA,IAHK,GAGED,GAAG,CAACC,IAHN;;AAIX,sBAAIA,IAAI,CAACC,KAAT,EAAgB;AACZJ,oBAAAA,MAAM,CAACG,IAAI,CAACC,KAAN,CAAN;AACH;;AACDL,kBAAAA,OAAO,CAACI,IAAD,CAAP;AAPW;AAAA;;AAAA;AAAA;AAAA;AASXH,kBAAAA,MAAM,cAAN;;AATW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AAYH,K,CAED;;;;6BACgBM,M,EAAQf,Y,EAAc;AAClC,aAAO,IAAIO,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAY,kBAAMC,OAAN,EAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEOf,KAAK,CAACgB,IAAN,WAAcb,GAAd,YAA0B;AACxCkB,oBAAAA,MAAM,EAANA,MADwC;AAExCf,oBAAAA,YAAY,EAAZA;AAFwC,mBAA1B,EAGhB;AACEgB,oBAAAA,OAAO,EAAG;AACNC,sBAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADT;AADZ,mBAHgB,CAFP;;AAAA;AAELR,kBAAAA,GAFK;AAULC,kBAAAA,IAVK,GAUED,GAAG,CAACC,IAVN;;AAWX,sBAAIA,IAAI,CAACC,KAAT,EAAgB;AACZJ,oBAAAA,MAAM,CAACI,KAAD,CAAN;AACH;;AACDL,kBAAAA,OAAO,CAACI,IAAD,CAAP;AAdW;AAAA;;AAAA;AAAA;AAAA;AAgBXH,kBAAAA,MAAM,cAAN;;AAhBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AAoBH;;;;;;AAIL,eAAeV,kBAAf","sourcesContent":["import axios from 'axios';\nimport {VUEX_LEVERAGES_LONG, VUEX_LEVERAGES_SHORT} from '../store/constants/bitmex'\nconst url = 'api/liquidations/liquidations'\nconst baseUrl = 'api/liquidations'\nclass LiquidationService {\n\n    // Register\n    static Liquidations(timeInterval,targetVolume, exchange, symbol,longleverages, shortleverages, update) {\n        return new Promise(async(resolve, reject)=>{\n            try {\n                const res = await axios.post(url, {\n                    \"timeInterval\": timeInterval,\n                    \"targetVolume\":targetVolume,\n                    \"exchange\":exchange,\n                    \"symbol\":symbol,\n                    VUEX_LEVERAGES_LONG: longleverages,\n                    VUEX_LEVERAGES_SHORT: shortleverages,\n                    \"update\": update\n                })\n                const data = res.data\n                if (data.error) {\n                    reject(data.error)\n                }\n                resolve(data)\n            } catch (err) {\n                reject(err)\n            }\n        })\n    }\n\n    static LiquidationBubbles() {\n        return new Promise(async(resolve, reject)=> {\n            try {\n                const res = await axios.get(`${baseUrl}/bubbles`)\n                const data = res.data\n                if (data.error) {\n                    reject(data.error)\n                }\n                resolve(data)\n            } catch (err) {\n                reject(err)\n            }\n        })\n    }\n\n    // Save options in user settings\n    static SaveOpts(volume, timeInterval) {\n        return new Promise(async(resolve, reject)=> {\n            try {\n                const res = await axios.post(`${url}/save`, {\n                    volume,\n                    timeInterval,\n                },{\n                    headers : {\n                        Authorization: localStorage.getItem('token')\n                    }\n                })  \n                const data = res.data\n                if (data.error) {\n                    reject(error)\n                }\n                resolve(data)\n            } catch (err) {\n                reject(err)\n            }\n           \n        })\n    }\n}\n\n\nexport default LiquidationService"]}]}