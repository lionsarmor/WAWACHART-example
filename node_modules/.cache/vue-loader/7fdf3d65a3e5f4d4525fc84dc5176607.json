{"remainingRequest":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/roddy/Desktop/WEB-APPS/realtimecharts-client/src/pages/liquidationLayoutPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/src/pages/liquidationLayoutPage.vue","mtime":1602350289715},{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n    import VueGridLayout from 'vue-grid-layout'\n    import LiquidationChart from '../components/LiquidationChart/LiquidationChart'\n    import MDRGuageChart from '../components/MDRGuageChart/MDRGuageChart'\n  import {\n        mapState,\n        mapActions\n    } from 'vuex'\n    import {\n    VUEX_MDR_REQUEST,\n    VUEX_MDRLIVE_REQUEST\n    } from \"@/store/constants/ui\";\n    import {\n        VUEX_WIDGET_OPTION_1,\n        VUEX_WIDGET_OPTION_2,\n        VUEX_WIDGET_OPTION_3,\n        VUEX_WIDGET_OPTION_4,\n        VUEX_WIDGET_OPTION_5,\n        VUEX_MDR_SWITCH,\n\n    } from '@/store/constants/ui'\n    \n    var liquidationPageLayout = [\n{ \"x\": 0, \"y\": 0, \"w\": 12, \"h\": 1, \"i\": \"0\", static: true },\n        {\n            \"x\": 0,\n            \"y\": 5,\n            \"w\": 1,\n            \"h\": 3,\n            \"i\": \"1\"\n        },\n        {\n            \"x\": 4,\n            \"y\": 5,\n            \"w\": 1,\n            \"h\": 3,\n            \"i\": \"2\"\n        },\n        {\n            \"x\": 8,\n            \"y\": 5,\n            \"w\": 1,\n            \"h\": 3,\n            \"i\": \"3\"\n        }\n    ]\n\n    export default {\n        name: 'liquidationlayoutPage',\n\n        data() {\n            return {\n                layout: liquidationPageLayout,\n                resizable: true,\n            }\n        },\n        watch: {\n            guageLiveWatch: function() {\n                this.bandValues()\n            },\n        },\n        methods: {\n    ...mapActions({\n        requestGuageMDR: VUEX_MDR_REQUEST,\n        requestLiveMDR: VUEX_MDRLIVE_REQUEST\n    }),\n      calcValue(band, min, max) {\n         let value = ((band - min) * 100) / (max - min)\n         return Math.round(value)\n        },\n    \n    bandValues() {\n        if (this.$refs.gauge1 != undefined) {\n            let int1 = this.guageInterval1\n            let int2 = this.guageInterval2\n            let int3 = this.guageInterval3\n            let int4 = this.guageInterval4\n            let int5 = this.guageInterval5\n            let cat1 = this.guageCat1\n            let cat2 = this.guageCat2\n            let cat3 = this.guageCat3\n\n            let band1 = this.calcValue(this.mdrDataLive[cat1], this.mdrDataInterval[int1][cat1].min, this.mdrDataInterval[int1][cat1].max)\n            let band2 = this.calcValue(this.mdrDataLive[cat2], this.mdrDataInterval[int1][cat2].min, this.mdrDataInterval[int1][cat2].max)\n            let band3 = this.calcValue(this.mdrDataLive[cat3], this.mdrDataInterval[int1][cat3].min, this.mdrDataInterval[int1][cat3].max)\n            let band4 = this.calcValue(this.mdrDataLive[cat1], this.mdrDataInterval[int2][cat1].min, this.mdrDataInterval[int2][cat1].max)\n            let band5 = this.calcValue(this.mdrDataLive[cat2], this.mdrDataInterval[int2][cat2].min, this.mdrDataInterval[int2][cat2].max)\n            let band6 = this.calcValue(this.mdrDataLive[cat3], this.mdrDataInterval[int2][cat3].min, this.mdrDataInterval[int2][cat3].max)\n            let band7 = this.calcValue(this.mdrDataLive[cat1], this.mdrDataInterval[int3][cat1].min, this.mdrDataInterval[int3][cat1].max)\n            let band8 = this.calcValue(this.mdrDataLive[cat2], this.mdrDataInterval[int3][cat2].min, this.mdrDataInterval[int3][cat2].max)\n            let band9 = this.calcValue(this.mdrDataLive[cat3], this.mdrDataInterval[int3][cat3].min, this.mdrDataInterval[int3][cat3].max)\n            \n            this.$refs.guage1[0].$refs.guage.options.series[0].data[0].y = band1\n            this.$refs.guage1[0].$refs.guage.options.series[1].data[0].y = band2\n            this.$refs.guage1[0].$refs.guage.options.series[2].data[0].y = band3\n            this.$refs.guage2[0].$refs.guage.options.series[0].data[0].y = band4\n            this.$refs.guage2[0].$refs.guage.options.series[1].data[0].y = band5\n            this.$refs.guage2[0].$refs.guage.options.series[2].data[0].y = band6\n            this.$refs.guage3[0].$refs.guage.options.series[0].data[0].y = band7\n            this.$refs.guage3[0].$refs.guage.options.series[1].data[0].y = band8\n            this.$refs.guage3[0].$refs.guage.options.series[2].data[0].y = band9\n            }\n\n        }\n        },\n        computed: {\n     ...mapState({\n                guageIntervalWatch: state => state.ui.guageIntervalWatch,\n                guageLiveWatch: state => state.ui.guageLiveWatch,\n                mdr_switch_value: state => state.ui.mdr_guage_switch,\n\n                widget_1: state => state.ui.widget_switch_1,\n                widget_2: state => state.ui.widget_switch_2,\n                widget_3: state => state.ui.widget_switch_3,\n                widget_4: state => state.ui.widget_switch_4,\n                widget_5: state => state.ui.widget_switch_5,\n\n                mdrDataLive: state => state.ui.mdrLive,\n                mdrDataInterval: state => state.ui.mdrInterval,\n                guageInterval1: state => state.ui.guageInterval1,\n                guageInterval2: state => state.ui.guageInterval2,\n                guageInterval3: state => state.ui.guageInterval3,\n                guageInterval4: state => state.ui.guageInterval4,\n                guageInterval5: state => state.ui.guageInterval5,\n                guageCat1: state => state.ui.guageCat1,\n                guageCat2: state => state.ui.guageCat2,\n                guageCat3: state => state.ui.guageCat3,\n            }),\n        },\n        mounted() {\n            this.requestGuageMDR()\n            let that = this\n            setInterval(function() {\n            that.requestLiveMDR()\n            }, 5000)\n            setInterval(function() {\n            that.requestGuageMDR()\n            }, 10*60*1000)\n        },\n        components: {\n            GridLayout: VueGridLayout.GridLayout,\n            GridItem: VueGridLayout.GridItem,\n            LiquidationChart,\n            MDRGuageChart,\n        },\n    }\n",{"version":3,"sources":["liquidationLayoutPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"liquidationLayoutPage.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n    <section>\n<div id=\"grid\">\n  <div class=\"layer-position\" >\n <grid-layout \n :layout.sync=\"layout\" \n :col-num=\"12\" \n :col-width=\"12\" \n :row-height=\"30\" \n :is-draggable=\"true\" \n :is-resizable=\"resizable\" \n :is-mirrored=\"false\" \n :vertical-compact=\"false\" \n :margin=\"[10, 10]\" \n :use-css-transforms=\"true\">\n        <grid-item v-for=\"item in layout\" ref=\"grid\" :static=\"item.static\" :x=\"item.x\" :y=\"item.y\" :w=\"item.w\" :h=\"item.h\" :i=\"item.i\" :key=\"item.id\">\n            <MDRGuageChart :title=\"guageInterval1\" :cats=\"[guageCat1, guageCat2, guageCat3]\" ref=\"guage1\" class=\"bottom-guage-margin\" v-if=\"item.i == '1'\" v-show=\"widget_1 == true\" />\n            <MDRGuageChart :title=\"guageInterval2\" :cats=\"[guageCat1, guageCat2, guageCat3]\" ref=\"guage2\" class=\"bottom-guage-margin\" v-if=\"item.i == '2'\" v-show=\"widget_2 == true\" />\n            <MDRGuageChart :title=\"guageInterval3\" :cats=\"[guageCat1, guageCat2, guageCat3]\" ref=\"guage3\" class=\"bottom-guage-margin\" v-if=\"item.i == '3'\" v-show=\"widget_3 == true\" />\n            <LiquidationChart v-if=\"item.i == '0'\"/>\n            </grid-item> \n        </grid-layout>\n  </div>\n</div>\n    </section>\n</template>\n\n<script>\n    import VueGridLayout from 'vue-grid-layout'\n    import LiquidationChart from '../components/LiquidationChart/LiquidationChart'\n    import MDRGuageChart from '../components/MDRGuageChart/MDRGuageChart'\n  import {\n        mapState,\n        mapActions\n    } from 'vuex'\n    import {\n    VUEX_MDR_REQUEST,\n    VUEX_MDRLIVE_REQUEST\n    } from \"@/store/constants/ui\";\n    import {\n        VUEX_WIDGET_OPTION_1,\n        VUEX_WIDGET_OPTION_2,\n        VUEX_WIDGET_OPTION_3,\n        VUEX_WIDGET_OPTION_4,\n        VUEX_WIDGET_OPTION_5,\n        VUEX_MDR_SWITCH,\n\n    } from '@/store/constants/ui'\n    \n    var liquidationPageLayout = [\n{ \"x\": 0, \"y\": 0, \"w\": 12, \"h\": 1, \"i\": \"0\", static: true },\n        {\n            \"x\": 0,\n            \"y\": 5,\n            \"w\": 1,\n            \"h\": 3,\n            \"i\": \"1\"\n        },\n        {\n            \"x\": 4,\n            \"y\": 5,\n            \"w\": 1,\n            \"h\": 3,\n            \"i\": \"2\"\n        },\n        {\n            \"x\": 8,\n            \"y\": 5,\n            \"w\": 1,\n            \"h\": 3,\n            \"i\": \"3\"\n        }\n    ]\n\n    export default {\n        name: 'liquidationlayoutPage',\n\n        data() {\n            return {\n                layout: liquidationPageLayout,\n                resizable: true,\n            }\n        },\n        watch: {\n            guageLiveWatch: function() {\n                this.bandValues()\n            },\n        },\n        methods: {\n    ...mapActions({\n        requestGuageMDR: VUEX_MDR_REQUEST,\n        requestLiveMDR: VUEX_MDRLIVE_REQUEST\n    }),\n      calcValue(band, min, max) {\n         let value = ((band - min) * 100) / (max - min)\n         return Math.round(value)\n        },\n    \n    bandValues() {\n        if (this.$refs.gauge1 != undefined) {\n            let int1 = this.guageInterval1\n            let int2 = this.guageInterval2\n            let int3 = this.guageInterval3\n            let int4 = this.guageInterval4\n            let int5 = this.guageInterval5\n            let cat1 = this.guageCat1\n            let cat2 = this.guageCat2\n            let cat3 = this.guageCat3\n\n            let band1 = this.calcValue(this.mdrDataLive[cat1], this.mdrDataInterval[int1][cat1].min, this.mdrDataInterval[int1][cat1].max)\n            let band2 = this.calcValue(this.mdrDataLive[cat2], this.mdrDataInterval[int1][cat2].min, this.mdrDataInterval[int1][cat2].max)\n            let band3 = this.calcValue(this.mdrDataLive[cat3], this.mdrDataInterval[int1][cat3].min, this.mdrDataInterval[int1][cat3].max)\n            let band4 = this.calcValue(this.mdrDataLive[cat1], this.mdrDataInterval[int2][cat1].min, this.mdrDataInterval[int2][cat1].max)\n            let band5 = this.calcValue(this.mdrDataLive[cat2], this.mdrDataInterval[int2][cat2].min, this.mdrDataInterval[int2][cat2].max)\n            let band6 = this.calcValue(this.mdrDataLive[cat3], this.mdrDataInterval[int2][cat3].min, this.mdrDataInterval[int2][cat3].max)\n            let band7 = this.calcValue(this.mdrDataLive[cat1], this.mdrDataInterval[int3][cat1].min, this.mdrDataInterval[int3][cat1].max)\n            let band8 = this.calcValue(this.mdrDataLive[cat2], this.mdrDataInterval[int3][cat2].min, this.mdrDataInterval[int3][cat2].max)\n            let band9 = this.calcValue(this.mdrDataLive[cat3], this.mdrDataInterval[int3][cat3].min, this.mdrDataInterval[int3][cat3].max)\n            \n            this.$refs.guage1[0].$refs.guage.options.series[0].data[0].y = band1\n            this.$refs.guage1[0].$refs.guage.options.series[1].data[0].y = band2\n            this.$refs.guage1[0].$refs.guage.options.series[2].data[0].y = band3\n            this.$refs.guage2[0].$refs.guage.options.series[0].data[0].y = band4\n            this.$refs.guage2[0].$refs.guage.options.series[1].data[0].y = band5\n            this.$refs.guage2[0].$refs.guage.options.series[2].data[0].y = band6\n            this.$refs.guage3[0].$refs.guage.options.series[0].data[0].y = band7\n            this.$refs.guage3[0].$refs.guage.options.series[1].data[0].y = band8\n            this.$refs.guage3[0].$refs.guage.options.series[2].data[0].y = band9\n            }\n\n        }\n        },\n        computed: {\n     ...mapState({\n                guageIntervalWatch: state => state.ui.guageIntervalWatch,\n                guageLiveWatch: state => state.ui.guageLiveWatch,\n                mdr_switch_value: state => state.ui.mdr_guage_switch,\n\n                widget_1: state => state.ui.widget_switch_1,\n                widget_2: state => state.ui.widget_switch_2,\n                widget_3: state => state.ui.widget_switch_3,\n                widget_4: state => state.ui.widget_switch_4,\n                widget_5: state => state.ui.widget_switch_5,\n\n                mdrDataLive: state => state.ui.mdrLive,\n                mdrDataInterval: state => state.ui.mdrInterval,\n                guageInterval1: state => state.ui.guageInterval1,\n                guageInterval2: state => state.ui.guageInterval2,\n                guageInterval3: state => state.ui.guageInterval3,\n                guageInterval4: state => state.ui.guageInterval4,\n                guageInterval5: state => state.ui.guageInterval5,\n                guageCat1: state => state.ui.guageCat1,\n                guageCat2: state => state.ui.guageCat2,\n                guageCat3: state => state.ui.guageCat3,\n            }),\n        },\n        mounted() {\n            this.requestGuageMDR()\n            let that = this\n            setInterval(function() {\n            that.requestLiveMDR()\n            }, 5000)\n            setInterval(function() {\n            that.requestGuageMDR()\n            }, 10*60*1000)\n        },\n        components: {\n            GridLayout: VueGridLayout.GridLayout,\n            GridItem: VueGridLayout.GridItem,\n            LiquidationChart,\n            MDRGuageChart,\n        },\n    }\n</script>\n\n<style>\n  html {\n       overflow-y: hidden;\n    }\n\n.layer-position {\n    background-color:rgba(29, 29, 31, 0.493);\n    position: relative;\n    top: -1vh;\n    height:130vh;\n    }\n#grid {\n  display: grid;\n  grid-template-columns: 1fr;\n  height: auto;\n}\n#grid > div {\n  padding: 0px;\n}\n</style>"]}]}