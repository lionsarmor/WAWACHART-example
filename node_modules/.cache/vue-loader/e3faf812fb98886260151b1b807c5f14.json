{"remainingRequest":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/roddy/Desktop/WEB-APPS/realtimecharts-client/src/components/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/src/components/Login.vue","mtime":1602351551011},{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roddy/Desktop/WEB-APPS/realtimecharts-client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { VUEX_POST_USER_LOGIN_REQUEST } from '../store/constants/authentication'\nimport { mapState, mapActions } from 'vuex'\n\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      username: null,\n      password: null,\n    }\n  },\n    methods: {\n    ...mapActions({\n      login: VUEX_POST_USER_LOGIN_REQUEST\n    }),\n\n    onSignIn() {\n      this.login({username: this.username, password: this.password})\n    },\n\n    register() {\n      this.$router.push(\"/register\")\n    },\n  },\n\n}\n\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container class=\"invisible\" >\n    <v-layout align-center justify-center row fill-height>\n      <v-flex shrink align-self-center>\n        <v-card>\n          <v-card-text>\n            <v-container>\n              <form @submit.prevent=\"onSignIn\">\n                <v-layout row>\n                  <v-flex xs12>\n                    <span class=\"headline\">Member Login (DEACVTIVATED)</span>\n                    <v-text-field\n                      name=\"username\"\n                      label=\"username\"\n                      id=\"username\"\n                      v-model=\"username\"\n                      type=\"username\"\n                      required></v-text-field>\n                  </v-flex>\n                </v-layout>\n                <v-layout row>\n                  <v-flex xs12>\n                    <v-text-field\n                      name=\"password\"\n                      label=\"Password\"\n                      id=\"password\"\n                      v-model=\"password\"\n                      type=\"password\"\n                      required></v-text-field>\n                  </v-flex>\n                </v-layout>\n                <v-layout row>\n                  <v-flex xs12>\n                    <v-btn @click=\"\" type=\"submit\">Sign In</v-btn>\n                  </v-flex>\n                </v-layout>\n              </form>\n              <br>\n              <span class=\"register\">No account?<a class=\"cursor\" v-on:click=\"registe()\"> Register</a></span>\n            </v-container>\n          </v-card-text>\n        </v-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\n\nimport { VUEX_POST_USER_LOGIN_REQUEST } from '../store/constants/authentication'\nimport { mapState, mapActions } from 'vuex'\n\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      username: null,\n      password: null,\n    }\n  },\n    methods: {\n    ...mapActions({\n      login: VUEX_POST_USER_LOGIN_REQUEST\n    }),\n\n    onSignIn() {\n      this.login({username: this.username, password: this.password})\n    },\n\n    register() {\n      this.$router.push(\"/register\")\n    },\n  },\n\n}\n\n</script>\n<style scoped>\n.invisible {\nopacity: 0.1;\n}\n.cursor {\n  cursor: pointer;\n}\n.register {\n  color: white;\n}\n</style>"]}]}